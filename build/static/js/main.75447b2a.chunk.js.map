{"version":3,"sources":["components/layouts/header/Header.js","components/pokemon-list/PokemonListItem.js","redux/pokemon/pokemon.types.js","config/index.js","redux/pokemon/pokemon.action.js","components/pokemon-list/PokemonList.js","pages/pokemon-list-page/PokemonList.js","pages/pokemon-detail-page/PokemonDetail.js","components/owned-pokemon/OwnedPokemon.js","pages/my-pokemon-page/MyPokemon.js","App.js","utils/index.js","redux/pokemon/pokemon.reducer.js","redux/rootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["navbar","className","href","src","width","height","class","alt","loading","Component","withRouter","data","history","props","match","name","ownedPokemon","useSelector","state","pokemon","total","length","filter","onClick","push","toUpperCase","pokemonTypes","FETCH_POKEMONS_START","FETCH_POKEMONS_SUCCESS","FETCH_POKEMONS_FAILED","FETCH_POKEMON_START","FETCH_POKEMON_SUCCESS","FETCH_POKEMON_FAILED","CATCH_POKEMON","RELEASE_POKEMON","RELEASE_ALL","appConfig","baseUrl","fetchPokemonsStart","type","fetchPokemon","url","dispatch","a","newUrl","config","axios","get","resp","payload","PokemonList","pokemons","nextUrl","prevUrl","isFetching","useDispatch","Fragment","map","key","data-toggle","PokemonListPage","useEffect","PokemonDetail","params","pokemonSingle","useState","isCatch","open","message","setState","pokeName","setForm","status","fetchPokemonDetail","console","log","sprites","front_default","back_default","max","Math","floor","random","setTimeout","throwPokeBall","msg","placeholder","onChange","e","target","value","ownedName","alert","item","catchPokemon","stats","stat","types","slot","base_stat","weight","moves","move","OwnedPokemon","MyPokemon","App","exact","path","render","pokemonList","component","PokemonDetailPage","MyPokemonPage","addPokemon","pokemonToAdd","removePokemon","nameToRemove","initialState","isFetchingSingle","currentPage","pokemonReducer","action","results","next","previous","count","persistConfig","storage","whiteList","rootReducer","combineReducers","persistReducer","middleWare","thunk","enhanceMiddleware","applyMiddleware","store","createStore","persistor","persistStore","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75447b2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'styled-components';\n\nexport default class navbar extends Component {\n    render() {\n        return (\n                <nav className=\"navbar navbar-light fixed-top\">\n                    <a className=\"navbar-brand\" href=\"/\">\n                        <img src=\"https://ecs7.tokopedia.net/assets-about-frontend/master/img/Tokopedia_Mascot-36c1015eabb66a26893edeb227db71e0.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\"></img>\n                        Tokopedia\n                    </a>\n                </nav>\n           \n        )\n    }\n}\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PokemonListItem = ({ data, history, match, ...props }) => {\n  const { name } = data;\n  const { ownedPokemon } = useSelector(state => state.pokemon);\n\n  let total =\n    ownedPokemon.length > 0 \n      ? ownedPokemon.filter(pokemon => {\n        return pokemon.name === name ? true : false;\n      })\n      : 0;\n  total = total.length > 0 ? total.length : \"Tidak Ada\";\n\n\n  const redirectToDetail = () => {\n    history.push(`/detail/${name}`);\n  };\n\n  \n\n  return (\n      <div className=\"col-md-3 col-sm-6 mb-5\">\n        <div {...props} onClick={() => redirectToDetail()}>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"text-center\">{name.toUpperCase()}</h5>\n                </div>\n                <div className=\"card-body mx-auto\">\n                  < img src={`https://img.pokemondb.net/sprites/black-white/anim/normal/${name}.gif`} width=\"150\" height=\"150\" alt=\"${name}\" loading=\"lazy\"/>\n                </div>\n                <div className=\"card-footer text-center\">\n                  List Saya : {total+\" Pokemon\"} \n                </div>\n            </div>\n        </div>\n      </div>\n  );\n};\n\nexport default withRouter(PokemonListItem);\n\n","const pokemonTypes = {\n  FETCH_POKEMONS_START: 'FETCH_POKEMONS_START',\n  FETCH_POKEMONS_SUCCESS: 'FETCH_POKEMONS_SUCCESS',\n  FETCH_POKEMONS_FAILED: 'FETCH_POKEMONS_FAILED',\n  FETCH_POKEMON_START: 'FETCH_POKEMON_START',\n  FETCH_POKEMON_SUCCESS: 'FETCH_POKEMON_SUCCESS',\n  FETCH_POKEMON_FAILED: 'FETCH_POKEMON_FAILED',\n  CATCH_POKEMON: 'CATCH_POKEMON',\n  RELEASE_POKEMON: 'RELEASE_POKEMON',\n  RELEASE_ALL: 'RELEASE_ALL'\n};\n\nexport default pokemonTypes;\n","const appConfig = {\n  baseUrl: 'https://pokeapi.co/api/v2/pokemon'\n};\n\nexport default appConfig;\n","import pokemonTypes from './pokemon.types';\nimport config from 'config';\nimport axios from 'axios';\n\nexport const fetchPokemonsStart = () => ({\n  type: pokemonTypes.FETCH_POKEMONS_START\n});\n\nexport const fetchPokemonStart = () => ({\n  type: pokemonTypes.FETCH_POKEMON_START\n});\n\nexport const fetchPokemon = (url = null) => async dispatch => {\n  dispatch(fetchPokemonsStart());\n\n  try {\n    let newUrl = url ? url : config.baseUrl\n    const resp = await axios.get(newUrl);\n    const { data } = resp;\n\n    dispatch({\n      type: pokemonTypes.FETCH_POKEMONS_SUCCESS,\n      payload: data\n    });\n  } catch (error) { }\n};\n\nexport const fetchPokemonDetail = name => async dispatch => {\n  dispatch(fetchPokemonStart());\n  try {\n    const resp = await axios.get(`${config.baseUrl}/${name}`);\n    const { data, status } = resp;\n    if (status === 200) {\n      dispatch({\n        type: pokemonTypes.FETCH_POKEMON_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) { }\n};\n\nexport const catchPokemon = (item, name) => dispatch => {\n  dispatch({ type: pokemonTypes.CATCH_POKEMON, payload: item, name: name });\n};\n\nexport const releasePokemon = (name) => dispatch => {\n  dispatch({ type: pokemonTypes.RELEASE_POKEMON, payload: name });\n};\nexport const releaseAll = () => dispatch => {\n  dispatch({ type: pokemonTypes.RELEASE_ALL });\n};\n\n\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PokemonListItem from './PokemonListItem';\n\nimport { fetchPokemon } from 'redux/pokemon/pokemon.action';\nconst PokemonList = () => {\n  const { pokemons, nextUrl, prevUrl, isFetching } = useSelector(state => state.pokemon);\n  const dispatch = useDispatch();\n  \n  return (\n    <React.Fragment>\n      {!isFetching && pokemons ?\n        pokemons.map(pokemon => (\n          <PokemonListItem data={pokemon} key={pokemon.name} />\n        )) : null}\n\n          <div>\n            <div className=\"btn-group btn-group-toggle fixed-bottom\" data-toggle=\"buttons\">\n              <a type=\"button\" class=\"btn btn-light btn-sm\" onClick={() => dispatch(fetchPokemon(prevUrl))}>Prev</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" href=\"/\">List Pokemon</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" href=\"/my-pokemon\">My Pokemon</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" onClick={() => dispatch(fetchPokemon(nextUrl))}>Next</a>\n            </div>\n          </div>\n\n    </React.Fragment>\n  );\n};\n\nexport default PokemonList;\n","import React, { useEffect } from 'react';\n\nimport PokemonList from 'components/pokemon-list/PokemonList';\nimport { fetchPokemon } from 'redux/pokemon/pokemon.action';\n\nimport { useDispatch } from 'react-redux';\n\nconst PokemonListPage = () => {\n  const dispatch = useDispatch();\n  // const { pokemons } = useSelector(state => state.pokemon);\n\n  useEffect(() => {\n    dispatch(fetchPokemon());\n  });\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <PokemonList></PokemonList>\n      </div>\n    </div>\n      \n  );\n};\n\nexport default PokemonListPage;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPokemonDetail, catchPokemon } from 'redux/pokemon/pokemon.action';\n\nconst PokemonDetail = ({ match, history }) => {\n  const { name } = match.params;\n  const { pokemonSingle, ownedPokemon } = useSelector(\n    state => state.pokemon\n  );\n\n  const [state, setState] = useState({\n    isCatch: false,\n    open: false,\n    message: `Opsssssssss. Coba Lagi Bos!`\n  });\n\n  const [pokeName, setForm] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPokemonDetail(name));\n    console.log(pokemonSingle);\n  }, [name, dispatch]);\n\n  const handlerCatch = () => {\n\n\n\n    let isNameExist = ownedPokemon.length > 0 ? ownedPokemon.filter(name => name.ownedName === pokeName) : false;\n    if (isNameExist.length > 0) {\n      alert('Coba Nama Lain!');\n      return;\n    }\n\n    dispatch(catchPokemon(pokemonSingle, pokeName));\n\n    history.push('/my-pokemon');\n  };\n\n  const handleChange = event => {\n    setForm(event.target.value);\n  };\n\n  const throwPokeBall = () => {\n    const getRandomInt = max => {\n      return Math.floor(Math.random() * Math.floor(max));\n    };\n    \n    setState({ ...state, open: true, isCatch: false });\n    if (getRandomInt(2) === 1) {\n      setState({\n        ...state,\n        isCatch: true,\n        open: false,\n      });\n    }\n    setTimeout(() => {\n       setState({ ...state, open: false });\n     }, 10000);\n  };\n\n  //Hitung Mundur\n  return (\n    <div className=\"container\">\n      <div className=\"col text-center\">\n        <div className=\"card\">\n        {pokemonSingle && (\n          <React.Fragment>\n\n            <div className=\"card-header\">\n              {pokemonSingle.name.toUpperCase()}\n            </div>\n\n            <div className=\"card-body\">\n                <div className=\"col\">\n                  <div className=\"float-left\">\n                  < img src={pokemonSingle.sprites.front_default} width=\"120\" height=\"120\" alt=\"\" loading=\"lazy\"/> \n                  </div>\n                  <div className=\"float-right\">\n                  < img src={pokemonSingle.sprites.back_default} width=\"120\" height=\"120\" alt=\"\" loading=\"lazy\"/>\n                  </div>\n                </div>\n                <div className=\"col\" > \n                  <div type=\"button\" onClick={() => throwPokeBall()}>< img src=\"https://i.gifer.com/origin/28/2860d2d8c3a1e402e0fc8913cd92cd7a_w200.gif\" width=\"90\" height=\"90\" alt=\"\" loading=\"lazy\"/> Tangkap!</div> \n                </div>\n            </div>\n            {state.isCatch ? (\n              <React.Fragment>\n                <div type=\"alert\" msg={`Excellent Throw! ${pokemonSingle.name} was caught!`} />\n                <div>Cepat Tangkap!</div>\n                <input className=\"m-2 border-1\"\n                  placeholder='Nama Pokemonmu?'\n                  name='pokeName'\n                  onChange={e => handleChange(e)}\n                />\n                <div type=\"button\" className=\"bg-success border border-primary rounded m-2\" onClick={handlerCatch}>Tangkap!</div>\n              </React.Fragment>\n            ) : (\n                <React.Fragment>\n            <div className=\"card-header\">\n              Detail\n            </div>\n                <div className=\"card-body\">\n                  <div className=\"float-left\">\n                    <div>\n                        {pokemonSingle.stats.map(stat => (\n                          <div key={stat.stat.name}>{stat.stat.name}\n                          </div>\n                        ))}\n                    </div>\n                    <div>\n                        {pokemonSingle.types.map(slot => (\n                        <div key={slot}> \n                          {\"Types \"+slot.slot}\n                        </div>\n                      ))}\n                    </div>\n                    <div>\n                        Weight\n                    </div>\n                    <div>\n                        Height\n                    </div>\n                  </div>\n\n                  <div className=\"float-right\">\n                    <div>\n                        {pokemonSingle.stats.map(base_stat => (\n                          <div key={base_stat}>\n                            {base_stat.base_stat}\n                          </div>\n                        ))}\n                    </div>\n                    <div>\n                        {pokemonSingle.types.map(type => (\n                        <div key={type.type.name}>\n                          {type.type.name}\n                        </div>\n                      ))}\n                    </div>\n                    <div>\n                        {pokemonSingle.weight}\n                    </div>\n                    <div>\n                        {pokemonSingle.height}\n                    </div>\n                  </div>\n                </div>\n            \n            <div className=\"card-header\">\n                Move\n            </div>\n            <div className=\"card-body\">\n                  <div>\n                    {pokemonSingle.moves.map(move => (\n                      <div key={move.move.name}>\n                        {move.move.name}\n                      </div>\n                    ))}\n                  </div>\n            </div>\n                </React.Fragment>\n              )}\n           \n            {state.open && alert(state.message)}\n\n            <div>\n            <div className=\"btn-group btn-group-toggle fixed-bottom\" data-toggle=\"buttons\">\n              <a type=\"button\" class=\"btn btn-light btn-sm\" >Prev</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" href=\"/\">List Pokemon</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" href=\"/my-pokemon\">My Pokemon</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" >Next</a>\n            </div>\n          </div>\n\n          </React.Fragment>\n          \n        )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonDetail;\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { releasePokemon, releaseAll } from 'redux/pokemon/pokemon.action';\n\nconst OwnedPokemon = ({ data }) => {\n  const dispatch = useDispatch();\n  return (\n        <React.Fragment>\n        {data.length > 0 && <a className=\"container button text-center bg-danger p-2 m-3\" onClick={() => dispatch(releaseAll())}>Hapus Semua List Pokemon!</a>}\n        {data.length > 0 ? data.map(pokemon => {\n        console.log(data);\n          return (\n              <div className=\"col-md-3 col-sm-6 mb-5\">\n                <div>\n                  <div className=\"card\" key={pokemon.ownedName}>\n                    <div className=\"card-header text-center\">\n                        {pokemon.ownedName.toUpperCase()}\n                    </div>\n                      <div className=\"card-body text-center\">\n                        < img src={pokemon.sprites.front_default} width=\"150\" height=\"150\" alt=\"\" loading=\"lazy\"/>\n                        <div>Nama Pokemon: {pokemon.name}</div>\n                      </div>\n                        <div className=\"card-footer bg-danger text-center\" onClick={() => dispatch(releasePokemon(pokemon.ownedName))}>\n                        Hapus\n                    </div>\n                  </div>\n                </div>\n              </div>\n          );\n        }) : <div className=\"text-center container bg-danger\">Opss Belum Ada Pokemon Yang Ditangkap!</div>}\n                  <div>\n            <div className=\"btn-group btn-group-toggle fixed-bottom\" data-toggle=\"buttons\">\n              <a type=\"button\" class=\"btn btn-light btn-sm\" >Prev</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" href=\"/\">List Pokemon</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" href=\"/my-pokemon\">My Pokemon</a>\n              <a type=\"button\" class=\"btn btn-light btn-sm\" >Next</a>\n            </div>\n          </div>\n        </React.Fragment>\n            \n    \n  );\n};\n\nexport default OwnedPokemon;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport OwnedPokemon from 'components/owned-pokemon/OwnedPokemon';\n\nconst MyPokemon = () => {\n  const { ownedPokemon } = useSelector(state => state.pokemon);\n  useEffect(() => {\n    console.log(ownedPokemon);\n  }, [ownedPokemon]);\n  return <div className=\"container\"><div className=\"row\"><OwnedPokemon data={ownedPokemon}></OwnedPokemon></div></div>;\n};\n\nexport default MyPokemon;\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from 'components/layouts/header/Header';\nimport PokemonListPage from 'pages/pokemon-list-page/PokemonList';\nimport PokemonDetailPage from 'pages/pokemon-detail-page/PokemonDetail';\nimport MyPokemonPage from 'pages/my-pokemon-page/MyPokemon';\n\nconst pokemonList = props => {\n  return <PokemonListPage {...props} />;\n};\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Switch>\n        <Route exact path='/' render={props => pokemonList(props)} />\n        <Route path='/detail/:name' component={PokemonDetailPage} />\n        <Route path='/my-pokemon' component={MyPokemonPage} />\n      </Switch>\n    </React.Fragment>\n    \n  );\n}\n\nexport default App;\n","export const addPokemon = (pokemon, pokemonToAdd, name) => {\n\n  return [...pokemon, { ...pokemonToAdd, ownedName: name }];\n};\n\n\nexport const removePokemon = (pokemons, nameToRemove) => {\n  console.log(nameToRemove, 'name')\n\n  return pokemons.filter(pokemon => pokemon.ownedName !== nameToRemove);\n}","import pokemonTypes from './pokemon.types';\nimport { addPokemon, removePokemon } from 'utils';\nconst initialState = {\n  isFetching: false,\n  isFetchingSingle: false,\n  pokemons: null,\n  pokemonSingle: null,\n  ownedPokemon: [],\n  nextUrl: null,\n  prevUrl: null,\n  currentPage: 1\n};\n\nconst pokemonReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case pokemonTypes.FETCH_POKEMONS_START:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case pokemonTypes.FETCH_POKEMON_START:\n      return {\n        ...state,\n        isFetchingSingle: true\n      };\n    case pokemonTypes.FETCH_POKEMONS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        pokemons: payload.results,\n        nextUrl: payload.next,\n        prevUrl: payload.previous,\n        total: payload.count\n      };\n    case pokemonTypes.FETCH_POKEMON_SUCCESS:\n      return {\n        ...state,\n        isFetchingSingle: false,\n        pokemonSingle: payload\n      };\n    case pokemonTypes.CATCH_POKEMON:\n      return {\n        ...state,\n        ownedPokemon: addPokemon(\n          state.ownedPokemon,\n          action.payload,\n          action.name\n        )\n      };\n    case pokemonTypes.RELEASE_POKEMON:\n      return {\n        ...state,\n        ownedPokemon: removePokemon(state.ownedPokemon, action.payload)\n      };\n    case pokemonTypes.RELEASE_ALL:\n      return {\n        ...state,\n        ownedPokemon: []\n      }\n    default:\n      return state;\n  }\n};\n\nexport default pokemonReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport pokemonReducer from './pokemon/pokemon.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whiteList: ['pokemon']\n};\n\nconst rootReducer = combineReducers({\n  pokemon: pokemonReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './rootReducer';\n\nconst middleWare = [thunk];\n\nconst enhanceMiddleware =\n  process.env.NODE_ENV === 'development'\n    ? composeWithDevTools(applyMiddleware(...middleWare))\n    : applyMiddleware(...middleWare);\n\nexport const store = createStore(rootReducer, enhanceMiddleware);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}